Bootstrap: docker
From: ubuntu:20.04
Stage: spython-base

%files
Dockerfile $SRC/Dockerfile.$TRINITY_VERSION
%labels
MAINTAINER bhaas@broadinstitute.org
%post

export DEBIAN_FRONTEND=noninteractive

apt-get -qq update \
&& DEBIAN_FRONTEND=noninteractive TZ=America/Los_Angeles apt-get -y install tzdata \
&& apt-get -qq -y install \
automake \
build-essential \
bzip2 \
cmake \
curl \
default-jre \
fort77 \
ftp \
g++ \
gcc \
gfortran \
git \
libblas-dev \
libbz2-dev \
libcairo2-dev \
libcurl4-openssl-dev \
libdb-dev \
libghc-zlib-dev \
libjpeg-dev \
liblzma-dev \
libncurses-dev \
libncurses5-dev \
libpcre3-dev \
libpng-dev \
libreadline-dev \
libreadline-dev \
libssl-dev \
libtbb-dev \
libx11-dev \
libxml2-dev \
libxt-dev \
libzmq3-dev \
make \
nano \
perl \
pkg-config \
python3 \
python3-dev \
python3-distutils \
python3-pip \
python3-setuptools \
rsync \
texlive-latex-base \
unzip \
wget \
x11-common \
zlib1g-dev


## Perl stuff
curl -L https://cpanmin.us | perl - App::cpanminus
cpanm install DB_File
cpanm install URI::Escape


## set up tool config and deployment area:

SRC=/usr/local/src
BIN=/usr/local/bin


#####
# Install R

mkdir -p $SRC
cd $SRC
#####
# Install R

mkdir -p $SRC
cd $SRC

apt-get install -y texlive texlive-latex-extra

R_VERSION=R-4.2.0

curl https://cran.r-project.org/src/base/R-4/$R_VERSION.tar.gz -o $R_VERSION.tar.gz && \
tar xvf $R_VERSION.tar.gz && \
cd $R_VERSION && \
./configure && make && make install

R -e 'install.packages("BiocManager", repos="http://cran.us.r-project.org")'
R -e 'BiocManager::install("tidyverse")'
R -e 'BiocManager::install("edgeR")'
R -e 'BiocManager::install("DESeq2")'
R -e 'BiocManager::install("ape")'
R -e 'BiocManager::install("ctc")'
R -e 'BiocManager::install("gplots")'
R -e 'BiocManager::install("Biobase")'
R -e 'BiocManager::install("qvalue")'
R -e 'BiocManager::install("goseq")'
R -e 'BiocManager::install("Glimma")'
R -e 'BiocManager::install("ROTS")'
R -e 'BiocManager::install("GOplot")'
R -e 'BiocManager::install("argparse")'
R -e 'BiocManager::install("fastcluster")'
R -e 'BiocManager::install("DEXSeq")'
R -e 'BiocManager::install("tximport")'
R -e 'BiocManager::install("tximportData")'


LD_LIBRARY_PATH=/usr/local/lib

apt-get install -y cython3

## Python 3 stuff
ln -sf /usr/bin/python3 /usr/bin/python

## some python modules
pip3 install numpy
pip3 install git+https://github.com/ewels/MultiQC.git
pip3 install HTSeq


## bowtie
mkdir -p $SRC
cd $SRC
wget https://sourceforge.net/projects/bowtie-bio/files/bowtie/1.2.1.1/bowtie-1.2.1.1-linux-x86_64.zip/download -O bowtie-1.2.1.1-linux-x86_64.zip && \
unzip bowtie-1.2.1.1-linux-x86_64.zip && \
mv bowtie-1.2.1.1/bowtie* $BIN

## RSEM
mkdir /usr/local/lib/site_perl
mkdir -p $SRC
cd $SRC
wget https://github.com/deweylab/RSEM/archive/v1.3.3.tar.gz && \
tar xvf v1.3.3.tar.gz && \
cd RSEM-1.3.3 && \
make && \
cp rsem-* convert-sam-for-rsem $BIN && \
cp rsem_perl_utils.pm /usr/local/lib/site_perl/ && \
cd ../ && rm -r RSEM-1.3.3



## Kallisto
mkdir -p $SRC
cd $SRC
wget https://github.com/pachterlab/kallisto/releases/download/v0.46.1/kallisto_linux-v0.46.1.tar.gz && \
tar xvf kallisto_linux-v0.46.1.tar.gz && \
mv kallisto/kallisto $BIN


## FASTQC
FASTQC_VERSION=0.11.9
mkdir -p $SRC
cd $SRC
wget http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v${FASTQC_VERSION}.zip && \
unzip fastqc_v${FASTQC_VERSION}.zip && \
chmod 755 /usr/local/src/FastQC/fastqc && \
ln -s /usr/local/src/FastQC/fastqc $BIN/.

# blast
mkdir -p $SRC
cd $SRC
BLASTPLUS_VERSION=2.12.0
wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/${BLASTPLUS_VERSION}/ncbi-blast-${BLASTPLUS_VERSION}+-x64-linux.tar.gz && \
tar xvf ncbi-blast-${BLASTPLUS_VERSION}+-x64-linux.tar.gz && \
cp ncbi-blast-${BLASTPLUS_VERSION}+/bin/* $BIN && \
rm -r ncbi-blast-${BLASTPLUS_VERSION}+

## Bowtie2
mkdir -p $SRC
cd $SRC
BOWTIE2_VERSION=2.4.4
wget https://sourceforge.net/projects/bowtie-bio/files/bowtie2/${BOWTIE2_VERSION}/bowtie2-${BOWTIE2_VERSION}-linux-x86_64.zip/download -O bowtie2-${BOWTIE2_VERSION}-linux-x86_64.zip && \
unzip bowtie2-${BOWTIE2_VERSION}-linux-x86_64.zip && \
mv bowtie2-${BOWTIE2_VERSION}-linux-x86_64/bowtie2* $BIN && \
rm *.zip && \
rm -r bowtie2-${BOWTIE2_VERSION}-linux-x86_64

## Samtools
SAMTOOLS_VERSION=1.13
wget https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VERSION}/samtools-${SAMTOOLS_VERSION}.tar.bz2 && \
tar xvf samtools-${SAMTOOLS_VERSION}.tar.bz2 && \
cd samtools-${SAMTOOLS_VERSION} && \
./configure && make && make install


## Jellyfish
JELLYFISH_VERSION=2.3.0
wget https://github.com/gmarcais/Jellyfish/releases/download/v${JELLYFISH_VERSION}/jellyfish-${JELLYFISH_VERSION}.tar.gz && \
tar xvf jellyfish-${JELLYFISH_VERSION}.tar.gz && \
cd jellyfish-${JELLYFISH_VERSION}/ && \
./configure && make && make install

## FeatureCounts
SUBREAD_VERSION=2.0.2
wget https://sourceforge.net/projects/subread/files/subread-${SUBREAD_VERSION}/subread-${SUBREAD_VERSION}-Linux-x86_64.tar.gz/download -O subread-${SUBREAD_VERSION}-Linux-x86_64.tar.gz && \
tar xvf subread-${SUBREAD_VERSION}-Linux-x86_64.tar.gz && \
cp -r subread-${SUBREAD_VERSION}-Linux-x86_64/bin/* $BIN/

## Hisat2
wget https://cloud.biohpc.swmed.edu/index.php/s/oTtGWbWjaxsQ2Ho/download -O hisat2-2.2.1-Linux_x86_64.zip  && \
unzip hisat2-2.2.1-Linux_x86_64.zip && \
cp hisat2-2.2.1/hisat2* $BIN/

## GMAP
GSNAP_VER=2021-07-23
mkdir -p $SRC
cd $SRC
GMAP_URL="http://research-pub.gene.com/gmap/src/gmap-gsnap-$GSNAP_VER.tar.gz" && \
wget $GMAP_URL && \
tar xvf gmap-gsnap-$GSNAP_VER.tar.gz && \
cd gmap-$GSNAP_VER && ./configure --prefix=`pwd` && make && make install && \
cp bin/* $BIN/


# blat
wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/blat/blat -P $BIN && \
chmod a+x $BIN/blat

## Picard tools
mkdir -p $SRC
cd $SRC
wget https://github.com/broadinstitute/picard/releases/download/2.25.7/picard.jar
PICARD_HOME=$SRC

####
## GATK4 installation
mkdir -p $SRC
cd $SRC
GATK_VERSION=4.2.1.0
wget https://github.com/broadinstitute/gatk/releases/download/${GATK_VERSION}/gatk-${GATK_VERSION}.zip && \
unzip gatk-${GATK_VERSION}.zip

GATK_HOME=$SRC/gatk-${GATK_VERSION}


## STAR
STAR_VERSION=2.7.8a
STAR_URL="https://github.com/alexdobin/STAR/archive/${STAR_VERSION}.tar.gz" &&\
wget -P $SRC $STAR_URL &&\
tar -xvf $SRC/${STAR_VERSION}.tar.gz -C $SRC && \
mv $SRC/STAR-${STAR_VERSION}/bin/Linux_x86_64_static/STAR /usr/local/bin



## Salmon
mkdir -p $SRC
cd $SRC
SALMON_VERSION=1.5.2
wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz && \
tar xvf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz && \
ln -s $SRC/salmon-${SALMON_VERSION}_linux_x86_64/bin/salmon $BIN/.


## Trinity
mkdir -p $SRC
cd $SRC
TRINITY_VERSION="2.15.1"
TRINITY_CO=8f0c44bccc321170b0994b2196f5be27f9c49b10

mkdir -p $SRC
cd $SRC
# some cleanup
rm -r ${R_VERSION} *.tar.gz *.zip *.bz2
df -h .
git clone --recursive --depth 1 --branch  Trinity-v$TRINITY_VERSION  https://github.com/trinityrnaseq/trinityrnaseq.git && \
cd trinityrnaseq && \
rm -rf .git && \
rm -rf ./trinity_ext_sample_data && \
make && make plugins && \
make install && \
cd ../ && rm -r trinityrnaseq

TRINITY_HOME=/usr/local/bin

PATH=${TRINITY_HOME}:${PATH}


# some cleanup
#mkdir -p $SRC
#cd $SRC
#rm -r ${R_VERSION} *.tar.gz *.zip *.bz2

apt-get -qq -y remove git && \
apt-get -qq -y autoremove && \
apt-get clean && \
echo "dddddddddddd" && \
dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100 && \
echo "dddddddddddd" && \
du -sk /usr/local/* && \
du -sk /tmp/* || true && \
ls -lart /tmp ||true && \
rm -rf /var/lib/apt/lists/* /var/log/dpkg.log

################################################
## be sure this is last!

%environment
export DEBIAN_FRONTEND=noninteractive
export SRC=/usr/local/src
export BIN=/usr/local/bin
export R_VERSION=R-4.2.0
export LD_LIBRARY_PATH=/usr/local/lib
export FASTQC_VERSION=0.11.9
export BLASTPLUS_VERSION=2.12.0
export BOWTIE2_VERSION=2.4.4
export SAMTOOLS_VERSION=1.13
export JELLYFISH_VERSION=2.3.0
export SUBREAD_VERSION=2.0.2
export GSNAP_VER=2021-07-23
export PICARD_HOME=$SRC
export GATK_VERSION=4.2.1.0
export GATK_HOME=$SRC/gatk-${GATK_VERSION}
export STAR_VERSION=2.7.8a
export SALMON_VERSION=1.5.2
export TRINITY_VERSION="2.15.1"
export TRINITY_CO=8f0c44bccc321170b0994b2196f5be27f9c49b10
export TRINITY_HOME=/usr/local/bin
export PATH=${TRINITY_HOME}:${PATH}
%runscript
cd $SRC
exec /bin/bash "$@"
%startscript
cd $SRC
exec /bin/bash "$@"
